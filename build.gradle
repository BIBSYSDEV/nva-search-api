/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'nebula.lint' version '16.9.1'
}

group 'no.unit.nva'
version '1.0-SNAPSHOT'


allprojects {

    apply plugin: 'nebula.lint'
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'


    gradleLint {
        rules = ['unused-dependency']
    }

    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }


    sourceCompatibility = JavaVersion.VERSION_11
    // source-code version and must be <= targetCompatibility
    targetCompatibility = JavaVersion.VERSION_11 // bytecode target version

    def junit5Version = '5.7.0'
    def jacksonVersion = '2.11.2'
    def awsSdkVersion = '1.11.851'
    def nvaCommonsVersion = '0.5.1'

    dependencies {
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
        implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta5'
        implementation group: 'com.amazonaws', name: 'aws-java-sdk-core', version: awsSdkVersion
        implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'
        implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '3.2.0'
        implementation group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: awsSdkVersion
        implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: awsSdkVersion
        implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.13'
        implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
        implementation group: 'com.github.BIBSYSDEV', name: 'nva-commons', version: nvaCommonsVersion

        implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.9.1'
        implementation group: 'org.elasticsearch', name: 'elasticsearch-core', version: '7.9.1'
        implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: '7.9.1'
        implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.9.1'
        implementation group: 'org.elasticsearch', name: 'elasticsearch-x-content', version: '7.9.1'
        implementation group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.4'
        implementation group: 'com.github.awslabs', name: 'aws-request-signing-apache-interceptor', version: 'deb7941e85'

        testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.5.7'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit5Version
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
    }

    test {
        useJUnitPlatform()
        failFast = true
        testLogging {
            events 'skipped', 'passed', 'failed'
        }
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    pmd {
        ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
        ruleSets = []
        ignoreFailures = false
    }

    checkstyle {
        configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
        showViolations = true
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
            html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
        }
    }

    check.dependsOn jacocoTestCoverageVerification
    jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    counter = 'METHOD'
                    value = 'COVEREDRATIO'
                    minimum = 0.9000
                }
            }

            rule {
                limit {
                    counter = 'CLASS'
                    value = 'COVEREDRATIO'
                    minimum = 0.9000
                }
            }
        }
    }
}